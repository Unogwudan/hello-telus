steps:
  # Step 1: Build the Maven project
  - name: 'maven:3.6.3-jdk-11'
    entrypoint: 'mvn'
    args: ['package', '-DskipTests']

  # Step 2: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/${_PROJECT_ID}/hello-telus:${_SHORT_SHA}', '.']

  # Step 3: Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/${_PROJECT_ID}/hello-telus:${_SHORT_SHA}']

  # Step 4: Set up kubectl to authenticate with your GKE cluster
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'container', 'clusters', 'get-credentials', '${_CLUSTER_NAME}',
        '--zone', '${_CLUSTER_REGION}', '--project', '${_PROJECT_ID}'
      ]

  # Step 5: Apply the deployment and service configuration
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/deployment.yaml']

  # Optional: Update the deployment image (if using imagePullPolicy: Always)
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      [
        'set', 'image', 'deployment/hello-telus',
        'hello-telus=gcr.io/${_PROJECT_ID}/hello-telus:${_SHORT_SHA}'
      ]

substitutions:
  _PROJECT_ID: 'unogwudan-test'
  _CLUSTER_NAME: 'autopilot-gke-cluster'
  _CLUSTER_REGION: 'us-central1'
  _SHORT_SHA: '${SHORT_SHA}'

images:
  - 'gcr.io/${_PROJECT_ID}/hello-telus:${_SHORT_SHA}'

artifacts:
  objects:
    location: 'gs://hello-telus-logs'
    paths: ['docker/*.tar']

timeout: '1200s'

options:
  logging: GCS_ONLY
logsBucket: gs://hello-telus-logs