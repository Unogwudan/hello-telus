steps:
  # Step 1: Clone the repository
  - name: 'gcr.io/cloud-builders/git'
    args: ['clone', 'https://github.com/unogwudan/hello-telus.git', '.']

  # Step 2: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/hello-telus:$SHORT_SHA', '.']

  # Step 3: Push the Docker image to Google Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/hello-telus:$SHORT_SHA']

  # Step 4: Set up kubectl to authenticate with your GKE cluster
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      [
        'container', 'clusters', 'get-credentials', '$CLUSTER_NAME',
        '--zone', '$CLUSTER_REGION', '--project', '$PROJECT_ID'
      ]

  # Step 5: Apply the deployment and service configuration
  - name: 'gcr.io/cloud-builders/kubectl'
    args: ['apply', '-f', 'k8s/deployment.yaml']

  # Optional: Update the deployment image (if using imagePullPolicy: Always)
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      [
        'set', 'image', 'deployment/hello-telus',
        'hello-telus=gcr.io/$PROJECT_ID/hello-telus:$SHORT_SHA'
      ]

substitutions:
  _PROJECT_ID: 'unogwudan-test'
  _CLUSTER_NAME: 'autopilot-gke-cluster'
  _CLUSTER_REGION: 'us-central1'
  _SHORT_SHA: $SHORT_SHA

images:
  - 'gcr.io/$PROJECT_ID/hello-telus:$SHORT_SHA'

artifacts:
  objects:
    location: 'gs://$PROJECT_ID-artifacts'
    paths: ['docker/*.tar']

timeout: '1200s'

options:
  logging: GCS_ONLY
logsBucket: gs://hello-telus-logs